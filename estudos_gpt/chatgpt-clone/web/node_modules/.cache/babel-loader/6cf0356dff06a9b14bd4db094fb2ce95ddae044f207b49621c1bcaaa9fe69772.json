{"ast":null,"code":"var _jsxFileName = \"/Users/gustavosilva/super-pico-de-galo/estudos_gpt/chatgpt-clone/web/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './styles/App.css';\nimport './styles/reset.css';\nimport { makeRequest } from './API/api';\nimport { SideMenu } from './components/SideMenu/SideMenu';\nimport { ChatMessage } from './components/SideMenu/ChatMessage/ChatMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [chatlog, setChatlog] = useState([{\n    user: \"gpt\",\n    message: \"Como posso te ajudar hoje?\"\n  }]);\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let response = await makeRequest({\n      prompt: input\n    });\n    response = response.data.split('\\n').map(line => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 54\n    }, this));\n    setChatlog([...chatlog, {\n      user: 'me',\n      message: `${input}`\n    }, {\n      user: 'gpt',\n      message: response\n    }]);\n    setInput(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        children: chatlog.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-holder\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            rows: \"1\",\n            className: \"chat-input-textarea\",\n            value: input,\n            onChange: e => setInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+GVR6pRZX6r9+PhiU/4PYdhn27U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","makeRequest","SideMenu","ChatMessage","jsxDEV","_jsxDEV","App","_s","input","setInput","chatlog","setChatlog","user","message","handleSubmit","e","preventDefault","response","prompt","data","split","map","line","children","fileName","_jsxFileName","lineNumber","columnNumber","className","index","onSubmit","rows","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/gustavosilva/super-pico-de-galo/estudos_gpt/chatgpt-clone/web/src/App.js"],"sourcesContent":["import {useState} from 'react';\n\nimport './styles/App.css';\nimport './styles/reset.css';\n\nimport { makeRequest } from './API/api';\nimport {SideMenu} from './components/SideMenu/SideMenu'\nimport { ChatMessage } from './components/SideMenu/ChatMessage/ChatMessage';\n\n\nfunction App() {\n\n  const [input, setInput] = useState(\"\")\n  const [chatlog, setChatlog ] = useState([{\n    user: \"gpt\",\n    message: \"Como posso te ajudar hoje?\"\n  }])\n\n  async function handleSubmit(e){\n    e.preventDefault()\n\n    let response = await makeRequest({prompt: input})\n\n    response = response.data.split('\\n').map(line => <p>{line}</p>)\n    \n    setChatlog([ ...chatlog, {\n      user: 'me',\n      message: `${input}`\n    },\n    {\n      user: 'gpt',\n      message: response\n\n    }\n    ])\n\n    setInput(\"\")\n  \n  }\n\n\n\n  return (\n    <div className=\"App\">\n      <SideMenu></SideMenu>\n     <section className='chatbox'>\n      <div className='chat-log'>\n        {chatlog.map((message, index)=>(\n          <ChatMessage\n            key={index}\n            message={message}\n            />\n          ))}\n    </div>\n      <div className='chat-input-holder'>\n        <form onSubmit = {handleSubmit}>\n          <input\n            rows='1'\n            className='chat-input-textarea'\n            value={input}\n            onChange= {e => setInput(e.target.value)}\n          >\n          \n          \n          \n          </input>\n\n\n\n        </form>\n\n      </div>\n     </section>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}